plugins {
    id 'org.springframework.boot' version '2.3.0.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id("org.asciidoctor.jvm.convert") version "3.1.0" // 1
    id("java")
}

group = 'seol.study'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    asciidoctorExtension // 2

    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation("org.springframework.boot:spring-boot-starter-web")
    implementation("org.springframework.boot:spring-boot-starter-actuator")
    implementation("org.springframework.boot:spring-boot-starter-validation")
    implementation("org.springframework.boot:spring-boot-starter-data-jpa")

    compileOnly("org.projectlombok:lombok")
    annotationProcessor("org.projectlombok:lombok")

    runtimeOnly("com.h2database:h2:1.4.200")

    testImplementation("org.springframework.boot:spring-boot-starter-test")

    asciidoctorExtension("org.springframework.restdocs:spring-restdocs-asciidoctor") // 3
    testImplementation("org.springframework.restdocs:spring-restdocs-mockmvc") // 4
}

ext {
    snippetsDir = file('build/generated-snippets')  // 5
}


asciidoctor {
    configurations 'asciidoctorExtension' // 6
    inputs.dir snippetsDir // 7
    baseDirFollowsSourceFile() // 8
    dependsOn test // 9
}

test {
    outputs.dir snippetsDir  // 10
    useJUnitPlatform()  // 11
}

task copyHTMLDocument(type: Copy) {
    dependsOn asciidoctor  // 12
    from "${asciidoctor.outputDir}"  // 13
    into "src/main/resources/static/docs"  // 14
}

build {
    dependsOn bootJar // 15
}

bootJar {
    dependsOn asciidoctor // 16
    from("${asciidoctor.outputDir}") { // 17
        into 'static/docs' // 18
    }
}
